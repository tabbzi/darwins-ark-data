include.lowest = T,
ordered_result = T)) %>% as.data.table()
locus[, ptShape := 21]
locus[, ptSize := 1.5]
locus[, ptOrder := as.integer(bin)]
locus[pos == indexPos, ptShape := 23]
locus[pos == indexPos, ptSize := 2.5]
locus[pos == indexPos, ptLabel := snp]
locus[pos == indexPos, ptOrder := 10]
# plot significance
colors = rev(pal_locuszoom("default")(5))
names(colors) = levels(locus$bin)
pSignif = locus %>%
dplyr::arrange(ptOrder) %>%
ggplot(aes(x = pos,
y = log10p,
fill = bin,
shape = ptShape,
size = ptSize,
order = ptOrder)) +
geom_vline(alpha = 0.5, xintercept = indexPos) +
geom_point() +
scale_size_identity() +
scale_shape_identity() +
scale_fill_manual(values = colors,
guide = guide_legend(override.aes = list(shape = 22,
size = 2))) +
scale_y_continuous(limits = c(0,plotp)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
labs(y = "-log10(p-value)", x = "", fill = "r2") +
theme_pubclean()
pZoo = locus %>%
dplyr::arrange(ptOrder) %>%
ggplot(aes(x = pos,
y = phyloP)) +
geom_vline(alpha = 0.5, xintercept = indexPos) +
geom_point(color = "#007a62", alpha = 0.2) +
scale_size_identity() +
scale_shape_identity() +
scale_fill_manual(values = colors,
guide = guide_legend(override.aes = list(shape = 22,
size = 2))) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
labs(y = "phyloP", x = "") +
theme_pubclean()
pTrack_cons = subsetByOverlaps(ranges_ROCCs, thisRegion) %>%
as.data.table() %>%
mutate(pos = dplyr::row_number()) %>%
mutate(bin = cut(start ,breaks = 5)) %>%
group_by(bin) %>%
mutate(pos = row_number()) %>%
ungroup() %>%
ggplot(aes(x = start, xend = end, y = pos, yend = pos, label = name)) +
geom_segment(linetype=1, size=5) +
geom_text(aes(x=(start + end)/2), nudge_y = -0.2) +
geom_text(aes(x=start), nudge_y = -0.2) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
theme_void()
pTrack_genes = subsetByOverlaps(ranges_genes, thisRegion) %>%
as.data.table() %>%
mutate(pos = dplyr::row_number()) %>%
mutate(bin = cut(start ,breaks = 5)) %>%
group_by(bin) %>%
mutate(pos = row_number()) %>%
ungroup() %>%
ggplot(aes(x = start, xend = end, y = pos, yend = pos, label = name)) +
geom_segment(linetype=1, size=5) +
geom_text(aes(x=(start + end)/2), nudge_y = -0.2) +
geom_text(aes(x=start), nudge_y = -0.2) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
theme_void()
pTrack_rOCRs = subsetByOverlaps(ranges_rOCRs, thisRegion) %>%
as.data.table() %>%
mutate(pos = 0) %>%
ggplot(aes(x = start, xend = end, y = pos, yend = pos)) +
geom_segment(linetype=1, size=5) +
#scale_x_continuous(limits = c(start-0.001*start,end+0.001*end),
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
theme_void()
p = plot_grid(pSignif, pZoo, pTrack_genes,
axis = 'tb',
align = 'v',
rel_heights = c(6,3,3),
nrow = 3,
ncol = 1)
p = plot_grid(pSignif, pZoo,
axis = 'tb',
align = 'v',
rel_heights = c(6,4),
nrow = 2,
ncol = 1)
ggplot2::ggsave(filename = paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr",chr,"_start-",start,"_end-",end,"_snp-",snp,".pdf", sep = ""),
plot = p,
device = "pdf",
units = "in",
width = 8,
height = 6)
ggplot2::ggsave(filename = paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr",chr,"_start-",start,"_end-",end,"_snp-",snp,".svg", sep = ""),
plot = p,
device = "svg",
units = "in",
width = 4.75,
height = 6)
###
#DarwinsArk_gp-0.70_biallelic-snps_maf-0.005_geno-0.05_hwe-1e-20-midp-keep-fewhet_N-3104_phe-fa.15-filled_dcov-datatype_qcov-age.hgt.fa.15_chr-5_start-43475000_end-43715000_snp-5:43678012:A:G.nosex
snp="5:43678012:A:G"
chr=5
start="43475000"
end="43715000"
thisRegion = GRanges(paste("chr", chr, sep = ""), IRanges(as.numeric(start),as.numeric(end)))
P="fa.15-filled"
Q="age.hgt.fa.15"
D="datatype"
GENO="DarwinsArk_gp-0.70_biallelic-snps_maf-0.005_geno-0.05_hwe-1e-20-midp-keep-fewhet_N-3104"
DATE="2022-07-15"
plotp=10
##
locusLD = read.delim(paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr-",chr,"_start-",start,"_end-",end,"_snp-",snp,".ld", sep = ""), header = T, sep = "") %>%
as_tibble()
index = locusLD$SNP_A %>% unique()
indexPos = locusLD$BP_A %>% unique()
locusLD = locusLD %>%
dplyr::summarise(snp = SNP_B,
r2 = R2)
# load summary statistics (snp, pos, b, p)
locusMLMA = read.delim(paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr-",chr,"_start-",start,"_end-",end,"_snp-",snp,".ass.tsv", sep = ""), header = F, sep = "", col.names = c("snp","pos","b","p")) %>% as_tibble()
# load effects
locusEff = read_tsv(paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr-",chr,"_start-",start,"_end-",end,"_snp-",snp,".eff.tsv", sep = ""), col_names = c("chr","pos","snp","eff"))
# load phylop
locusZoo = read_tsv(paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr-",chr,"_start-",start,"_end-",end,"_snp-",snp,".zoo.tsv", sep = ""), col_names = c("chrA","startA","endA","chrB","startB","endB","zooID","phyloP"))
# join
locus = locusMLMA %>%
merge(locusLD, by = "snp", all.x = T) %>%
mutate(log10p = -log10(p)) %>%
mutate(r2 = if_else(is.na(r2), true = 0, false = r2)) %>%
#merge((locusEff %>% dplyr::select(snp,eff)), by = "snp", all.x = T) %>%
merge((locusZoo %>% dplyr::select(pos = endA, phyloP)), by = "pos") %>%
as.data.table()
locus = locus %>%
mutate(bin = cut(r2, breaks = c(0,0.2,0.4,0.6,0.8,1),
include.lowest = T,
ordered_result = T)) %>% as.data.table()
locus[, ptShape := 21]
locus[, ptSize := 1.5]
locus[, ptOrder := as.integer(bin)]
locus[pos == indexPos, ptShape := 23]
locus[pos == indexPos, ptSize := 2.5]
locus[pos == indexPos, ptLabel := snp]
locus[pos == indexPos, ptOrder := 10]
# plot significance
colors = rev(pal_locuszoom("default")(5))
names(colors) = levels(locus$bin)
pSignif = locus %>%
dplyr::arrange(ptOrder) %>%
ggplot(aes(x = pos,
y = log10p,
fill = bin,
shape = ptShape,
size = ptSize,
order = ptOrder)) +
geom_vline(alpha = 0.5, xintercept = indexPos) +
geom_point() +
scale_size_identity() +
scale_shape_identity() +
scale_fill_manual(values = colors,
guide = guide_legend(override.aes = list(shape = 22,
size = 2))) +
scale_y_continuous(limits = c(0,plotp)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
labs(y = "-log10(p-value)", x = "", fill = "r2") +
theme_pubclean()
pZoo = locus %>%
dplyr::arrange(ptOrder) %>%
ggplot(aes(x = pos,
y = phyloP)) +
geom_vline(alpha = 0.5, xintercept = indexPos) +
geom_point(color = "#007a62", alpha = 0.2) +
scale_size_identity() +
scale_shape_identity() +
scale_fill_manual(values = colors,
guide = guide_legend(override.aes = list(shape = 22,
size = 2))) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
labs(y = "phyloP", x = "") +
theme_pubclean()
pTrack_cons = subsetByOverlaps(ranges_ROCCs, thisRegion) %>%
as.data.table() %>%
mutate(pos = dplyr::row_number()) %>%
mutate(bin = cut(start ,breaks = 5)) %>%
group_by(bin) %>%
mutate(pos = row_number()) %>%
ungroup() %>%
ggplot(aes(x = start, xend = end, y = pos, yend = pos, label = name)) +
geom_segment(linetype=1, size=5) +
geom_text(aes(x=(start + end)/2), nudge_y = -0.2) +
geom_text(aes(x=start), nudge_y = -0.2) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
theme_void()
pTrack_genes = subsetByOverlaps(ranges_genes, thisRegion) %>%
as.data.table() %>%
mutate(pos = dplyr::row_number()) %>%
mutate(bin = cut(start ,breaks = 5)) %>%
group_by(bin) %>%
mutate(pos = row_number()) %>%
ungroup() %>%
ggplot(aes(x = start, xend = end, y = pos, yend = pos, label = name)) +
geom_segment(linetype=1, size=5) +
geom_text(aes(x=(start + end)/2), nudge_y = -0.2) +
geom_text(aes(x=start), nudge_y = -0.2) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
theme_void()
pTrack_rOCRs = subsetByOverlaps(ranges_rOCRs, thisRegion) %>%
as.data.table() %>%
mutate(pos = 0) %>%
ggplot(aes(x = start, xend = end, y = pos, yend = pos)) +
geom_segment(linetype=1, size=5) +
#scale_x_continuous(limits = c(start-0.001*start,end+0.001*end),
scale_x_continuous(breaks = scales::pretty_breaks(n = 5),
labels = scales::label_bytes(accuracy = 0.1)) +
coord_cartesian(xlim=c(as.numeric(start),as.numeric(end))) +
theme_void()
p = plot_grid(pSignif, pZoo, pTrack_genes,
axis = 'tb',
align = 'v',
rel_heights = c(6,3,3),
nrow = 3,
ncol = 1)
p = plot_grid(pSignif, pZoo,
axis = 'tb',
align = 'v',
rel_heights = c(6,4),
nrow = 2,
ncol = 1)
ggplot2::ggsave(filename = paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr",chr,"_start-",start,"_end-",end,"_snp-",snp,".pdf", sep = ""),
plot = p,
device = "pdf",
units = "in",
width = 8,
height = 6)
ggplot2::ggsave(filename = paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr",chr,"_start-",start,"_end-",end,"_snp-",snp,".svg", sep = ""),
plot = p,
device = "svg",
units = "in",
width = 4.75,
height = 6)
p = plot_grid(pSignif, pZoo, pTrack_genes,
axis = 'tb',
align = 'v',
rel_heights = c(6,3,3),
nrow = 3,
ncol = 1)
ggplot2::ggsave(filename = paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr",chr,"_start-",start,"_end-",end,"_snp-",snp,".pdf", sep = ""),
plot = p,
device = "pdf",
units = "in",
width = 8,
height = 6)
ggplot2::ggsave(filename = paste("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/locus/",DATE,"/",GENO,"_phe-",P,"_dcov-",D,"_qcov-",Q,"_chr",chr,"_start-",start,"_end-",end,"_snp-",snp,".svg", sep = ""),
plot = p,
device = "svg",
units = "in",
width = 4.75,
height = 6)
fa.all.gen.cor = read_tsv("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/gwas/genetic_correlations/fa.all.cor.new.tsv")
fa.all.gen.cor %>%
filter(!is.na(Rg)) %>%
select(phe1,phe2,Rg) %>%
bind_rows(data.table(phe1=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled"),
phe2=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled"),
Rg=1)) %>%
complete(phe1,phe2) %>%
unique() %>%
mutate(Rg = if_else(is.na(Rg),
0,
Rg)) %>%
arrange(phe1)
fa.all.gen.cor %>%
filter(!is.na(Rg)) %>%
dplyr::select(phe1,phe2,Rg) %>%
bind_rows(data.table(phe1=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled"),
phe2=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled"),
Rg=1)) %>%
complete(phe1,phe2) %>%
unique() %>%
mutate(Rg = if_else(is.na(Rg),
0,
Rg)) %>%
arrange(phe1)
test = fa.all.gen.cor %>%
filter(!is.na(Rg)) %>%
dplyr::select(phe1,phe2,Rg) %>%
bind_rows(data.table(phe1=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled"),
phe2=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled"),
Rg=1)) %>%
complete(phe1,phe2) %>%
unique() %>%
mutate(Rg = if_else(is.na(Rg),
0,
Rg)) %>%
arrange(phe1)
write_tsv(test,"~/Dropbox (UMass Medical School)/Projects/DarwinsArk/fa.all.cor.test.tsv")
test=fa.all.gen.cor %>%
filter(!is.na(Rg)) %>%
dplyr::select(phe1,phe2,Rg) %>%
bind_rows(data.table(phe1=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled", sep = ""),
phe2=paste("fa.",str_pad(seq(01,25),width = 2,pad = "0"),"-filled", sep = ""),
Rg=1)) %>%
complete(phe1,phe2) %>%
unique() %>%
arrange(phe1,phe2) %>%
mutate(Rg = if_else(is.na(Rg),
0,
Rg)) %>%
mutate(Rg = if_else(Rg > 1,
1,
if_else(Rg < -1,
-1,
Rg)))
write_tsv(test,"~/Dropbox (UMass Medical School)/Projects/DarwinsArk/fa.all.cor.test.tsv")
library(tidyverse)
reports = read_tsv("~/Dropbox (UMass Medical School)/Projects/DogAgingProject/workspace/2022-11-18/DogAgingMain-DnaTrackerDataReturn_DATA_2022-11-18_1028.csv")
platforms = read_tsv("~/Dropbox (UMass Medical School)/Projects/DogAgingProject/workspace/2022-11-18/platform.tsv")
View(reports)
reports %>% filter(!participant %in% reports$study_id)
platforms %>% filter(!participant %in% reports$study_id)
platforms %>% filter(!participant %in% reports$study_id) %>% nrow()
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded")
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% View()
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% View()
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant) %>% View()
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% View()
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% filter(`entity:platform_id` != "a8bce9b7-ece8-42ed-bf88-719946c70dc3")
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% filter(`entity:platform_id` != "a8bce9b7-ece8-42ed-bf88-719946c70dc3") %>% select(platform = `entity:platform_id`)
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% filter(`entity:platform_id` != "a8bce9b7-ece8-42ed-bf88-719946c70dc3") %>% ungroup() %>% select(platform = `entity:platform_id`)
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% filter(`entity:platform_id` != "a8bce9b7-ece8-42ed-bf88-719946c70dc3") %>% ungroup() %>% select(platform = `entity:platform_id`) %>% mutate(`membership:platform_set_id` = "DAP_GenomicReports_2022Nov")
platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% filter(`entity:platform_id` != "a8bce9b7-ece8-42ed-bf88-719946c70dc3") %>% ungroup() %>% select(platform = `entity:platform_id`) %>% mutate(`membership:platform_set_id` = "DAP_GenomicReports_2022Nov") %>% select(`membership:platform_set_id`,platform)
test = platforms %>% filter(!participant %in% reports$study_id) %>% filter(status == "succeeded") %>% group_by(participant) %>% mutate(n=n()) %>% filter(!is.na(participant)) %>% filter(`entity:platform_id` != "a8bce9b7-ece8-42ed-bf88-719946c70dc3") %>% ungroup() %>% select(platform = `entity:platform_id`) %>% mutate(`membership:platform_set_id` = "DAP_GenomicReports_2022Nov") %>% select(`membership:platform_set_id`,platform)
write_tsv(test,"~/Dropbox (UMass Medical School)/Projects/DogAgingProject/workspace/2022-11-18/platform_set_membership_2022-11-18.tsv")
gwas_data <- read_tsv("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/test.mlma") %>%
mutate(phe = "Q121",
n = 2115) %>%
select(phe,
chr = Chr,
pos = bp,
snp = SNP,
ref = A1,
alt = A2,
freq = Freq,
p,
b,
n)
library(tidyverse)
gwas_data <- read_tsv("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/test.mlma") %>%
mutate(phe = "Q121",
n = 2115) %>%
select(phe,
chr = Chr,
pos = bp,
snp = SNP,
ref = A1,
alt = A2,
freq = Freq,
p,
b,
n)
View(gwas_data)
library(shiny); runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
colnames(gwas_data)
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
runApp('Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-gwas/bin/plot_interactive.R')
source("~/Dropbox (UMass Medical School)/Projects/DarwinsArk/bin/DarwinsArk_Database.R")
library(tidyverse)
plat = read_tsv("~/Dropbox (UMass Medical School)/Projects/DogAgingProject/issues/platform_2023-02-13.tsv")
prob=read_csv("~/Dropbox (UMass Medical School)/Projects/DogAgingProject/issues/DogAgingMain-GencoveDNASuccessBut_DATA_2023-01-25_1238.csv")
View(prob)
ok = merge(prob,plat,by.x = "k1_tube_serial", by.y= "sample")
ok
reports_2022_02_15=data.frame(`entity:platform_set_id`="DAP_Reports_2022-02-15",platform=ok$`entity:platform_id`)
View(reports_2022_02_15)
write_tsv(reports_2022_02_15,"~/Dropbox (UMass Medical School)/Projects/DogAgingProject/workspace/platform_set_membership_2023-02-15.tsv")
reports_2022_02_15=data.frame(`entity:platform_set_id`="DAP_Reports_2023-02-15",platform=ok$`entity:platform_id`)
write_tsv(reports_2022_02_15,"~/Dropbox (UMass Medical School)/Projects/DogAgingProject/workspace/platform_set_membership_2023-02-15.tsv")
plat %>% filter(status%in%c("succeeded","failed qc") & is.na(fastqr1)) %>% View()
plat %>% filter(status %in% c("succeeded","failed qc") & is.na(fastqr1)) %>% View()
plat %>% filter(status %in% c("succeeded","failed qc") & (is.na(fastqr1) | fastqr1 == "")) %>% View()
plat %>% filter(status %in% c("succeeded","failed qc") & (is.na(fastqr1) | fastqr1 == " ")) %>% View()
plat %>% filter(status %in% c("succeeded","failed qc")) %>% View()
plat %>% filter((is.na(fastqr1) | fastqr1 == "")) %>% View()
plat %>% filter(sample=="31211050307048") %>% View()
### Data Management ----
require(argparse)
require(tidyverse)
require(dplyr)
require(data.table)
require(zoo)
### Visualization and Plotting ----
require(ggpubr)
require(ggtext)
require(ggrepel)
require(scales)
require(cowplot)
require(corrplot)
require(colorspace)
require(viridis)
require(PerformanceAnalytics)
require(wesanderson)
require(jtools)
### Dates and Times ----
require(anytime)
require(lubridate)
### Free Text and Strings ----
require(stringr)
require(stringi)
require(stringdist)
require(english)
require(tm)
require(topicmodels)
require(lattice)
require(tidytext)
require(proxy)
require(corpus)
require(gender)
require(rxnorm)
require(RxNormR)
require(qdap)
data(stop_words)
### Locations ----
require(zipcodeR)
### Correlation and Regression ----
require(pspearman)
require(jtools)
require(caret)
### Missing Data ----
require(naniar)
require(finalfit)
### Dimensional Reduction ----
require(psych)
require(nFactors)
require(FactoMineR)
require(factoextra)
require(corrr)
require(car)
require(BBmisc)
require(mice)
require(phateR)
## ARGUMENTS ----
parser <- ArgumentParser()
parser$add_argument("--dir",
help = "Working directory",
default = "~/Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-data")
parser$add_argument("--date",
help = "Data freeze date",
default = "20221120")
parser$add_argument("--geno",
help = "Genetic dataset IDs",
default = "~/Dropbox (UMass Medical School)/Projects/DarwinsArk/git/darwins-ark-data/gwa/gen/DarwinsArk_gp-0.70_biallelic-snps_maf-0.001_geno-0.05_hwe-1e-20-midp-keep-fewhet_N-3465.fam")
args <- parser$parse_args()
print(args)
### Set working directory ----
workDir = args$dir
setwd(workDir)
### Set data freeze ----
freezeDate = args$date
freezeDir = paste(workDir, "data", "database", "data_freeze", freezeDate, sep = "/")
### Load from saved image, if available ----
load(paste(workDir,
"dat",
paste(
paste("DarwinsArk",
freezeDate,
"phenotyping", sep = "_"),
".RData",
sep = ""
), sep = "/"))
dogs %>% filter(dog==10534)
dogs %>% filter(dog==12734)
dogs %>% filter(dog==13638)
answers %>% filter(dog==10534) %>% View()
questions %>% filter(string %like% "lift")
questions %>% pull(options)
questions %>% pull(options) %>% unique()
questions %>% pull(options) %>% unique() %>% View()
questions %>% select(options) %>% unique() %>% View()
answers %>% filter(dog==22289) %>% View()
dogs %>% filter(dog==22289) %>% View()
